{{- range .Values.microservices }}
{{- if .enabled }}
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ .name }}-service
  namespace: {{ $.Values.global.namespace }}
  labels:
    app: {{ .name }}-service
    component: microservice
    chart: {{ $.Chart.Name }}-{{ $.Chart.Version }}
    release: {{ $.Release.Name }}
    heritage: {{ $.Release.Service }}
spec:
  replicas: {{ .replicas | default 1 }}
  selector:
    matchLabels:
      app: {{ .name }}-service
      release: {{ $.Release.Name }}
  template:
    metadata:
      labels:
        app: {{ .name }}-service
        component: microservice
        release: {{ $.Release.Name }}
    spec:
      containers:
      - name: {{ .name }}
        image: "{{ .image.repository }}:{{ .image.tag | default $.Values.global.imageTag }}"
        imagePullPolicy: {{ .image.pullPolicy | default $.Values.global.imagePullPolicy }}
        ports:
        - name: http
          containerPort: {{ .port }}
          protocol: TCP
        {{- if $.Values.volumes.enabled }}
        volumeMounts:
        - name: source-code
          mountPath: {{ $.Values.volumes.mountPath }}
          subPath: services/{{ .name }}
        {{- end }}
        env:
        {{- range .env }}
        - name: {{ .name }}
          value: {{ .value | quote }}
        {{- end }}
        {{- if $.Values.database.enabled }}
        - name: DATABASE_URL
          value: "postgresql://{{ $.Values.database.auth.username }}:{{ $.Values.database.auth.password }}@{{ $.Values.database.name }}.{{ $.Values.global.namespace }}.svc.cluster.local:{{ $.Values.database.port }}/{{ $.Values.database.auth.database }}"
        {{- end }}
        resources:
          {{- toYaml .resources | nindent 10 }}
        livenessProbe:
          httpGet:
            path: /health
            port: http
          initialDelaySeconds: 30
          periodSeconds: 10
          timeoutSeconds: 5
          successThreshold: 1
          failureThreshold: 3
        readinessProbe:
          httpGet:
            path: /health
            port: http
          initialDelaySeconds: 5
          periodSeconds: 5
          timeoutSeconds: 3
          successThreshold: 1
          failureThreshold: 3
      {{- if $.Values.volumes.enabled }}
      volumes:
      - name: source-code
        hostPath:
          path: {{ $.Values.volumes.hostPath }}
          type: Directory
      {{- end }}
---
apiVersion: v1
kind: Service
metadata:
  name: {{ .name }}-service
  namespace: {{ $.Values.global.namespace }}
  labels:
    app: {{ .name }}-service
    component: microservice
    chart: {{ $.Chart.Name }}-{{ $.Chart.Version }}
    release: {{ $.Release.Name }}
    heritage: {{ $.Release.Service }}
spec:
  type: ClusterIP
  ports:
  - port: 80
    targetPort: http
    protocol: TCP
    name: http
  selector:
    app: {{ .name }}-service
    release: {{ $.Release.Name }}
{{- end }}
{{- end }}

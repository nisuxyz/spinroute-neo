{{- if .Values.database.enabled }}
apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ .Values.database.name }}
  namespace: {{ .Values.global.namespace }}
  labels:
    app: {{ .Values.database.name }}
    component: database
    chart: {{ .Chart.Name }}-{{ .Chart.Version }}
    release: {{ .Release.Name }}
    heritage: {{ .Release.Service }}
spec:
  replicas: {{ .Values.database.replicas | default 1 }}
  selector:
    matchLabels:
      app: {{ .Values.database.name }}
      release: {{ .Release.Name }}
  template:
    metadata:
      labels:
        app: {{ .Values.database.name }}
        component: database
        release: {{ .Release.Name }}
    spec:
      containers:
      - name: {{ .Values.database.name }}
        image: "{{ .Values.database.image.repository }}:{{ .Values.database.image.tag }}"
        imagePullPolicy: {{ .Values.database.image.pullPolicy }}
        ports:
        - name: postgres
          containerPort: {{ .Values.database.port }}
          protocol: TCP
        env:
        - name: POSTGRES_DB
          value: {{ .Values.database.auth.database }}
        - name: POSTGRES_USER
          value: {{ .Values.database.auth.username }}
        - name: POSTGRES_PASSWORD
          value: {{ .Values.database.auth.password }}
        - name: PGDATA
          value: /var/lib/postgresql/data/pgdata
        resources:
          {{- toYaml .Values.database.resources | nindent 10 }}
        volumeMounts:
        - name: postgres-storage
          mountPath: /var/lib/postgresql/data
        livenessProbe:
          exec:
            command:
            - /bin/sh
            - -c
            - pg_isready -U {{ .Values.database.auth.username }} -d {{ .Values.database.auth.database }}
          initialDelaySeconds: 30
          periodSeconds: 10
          timeoutSeconds: 5
          successThreshold: 1
          failureThreshold: 3
        readinessProbe:
          exec:
            command:
            - /bin/sh
            - -c
            - pg_isready -U {{ .Values.database.auth.username }} -d {{ .Values.database.auth.database }}
          initialDelaySeconds: 5
          periodSeconds: 5
          timeoutSeconds: 3
          successThreshold: 1
          failureThreshold: 3
      volumes:
      - name: postgres-storage
        {{- if .Values.database.persistence.enabled }}
        persistentVolumeClaim:
          claimName: {{ .Values.database.name }}-pvc
        {{- else }}
        emptyDir: {}
        {{- end }}
---
{{- if .Values.database.persistence.enabled }}
apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  name: {{ .Values.database.name }}-pvc
  namespace: {{ .Values.global.namespace }}
  labels:
    app: {{ .Values.database.name }}
    component: database
    chart: {{ .Chart.Name }}-{{ .Chart.Version }}
    release: {{ .Release.Name }}
    heritage: {{ .Release.Service }}
spec:
  accessModes:
    - ReadWriteOnce
  resources:
    requests:
      storage: {{ .Values.database.persistence.size }}
  {{- if .Values.database.persistence.storageClass }}
  storageClassName: {{ .Values.database.persistence.storageClass }}
  {{- end }}
---
{{- end }}
apiVersion: v1
kind: Service
metadata:
  name: {{ .Values.database.name }}
  namespace: {{ .Values.global.namespace }}
  labels:
    app: {{ .Values.database.name }}
    component: database
    chart: {{ .Chart.Name }}-{{ .Chart.Version }}
    release: {{ .Release.Name }}
    heritage: {{ .Release.Service }}
spec:
  type: ClusterIP
  ports:
  - port: {{ .Values.database.port }}
    targetPort: postgres
    protocol: TCP
    name: postgres
  selector:
    app: {{ .Values.database.name }}
    release: {{ .Release.Name }}
{{- end }}
